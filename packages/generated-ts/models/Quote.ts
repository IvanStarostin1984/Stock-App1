/* tslint:disable */
/* eslint-disable */
/**
 * SMWA API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Quote
 */
export interface Quote {
    /**
     * 
     * @type {string}
     * @memberof Quote
     */
    symbol: string;
    /**
     * 
     * @type {number}
     * @memberof Quote
     */
    price: number;
}

/**
 * Check if a given object implements the Quote interface.
 */
export function instanceOfQuote(value: object): value is Quote {
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    if (!('price' in value) || value['price'] === undefined) return false;
    return true;
}

export function QuoteFromJSON(json: any): Quote {
    return QuoteFromJSONTyped(json, false);
}

export function QuoteFromJSONTyped(json: any, ignoreDiscriminator: boolean): Quote {
    if (json == null) {
        return json;
    }
    return {
        
        'symbol': json['symbol'],
        'price': json['price'],
    };
}

export function QuoteToJSON(json: any): Quote {
    return QuoteToJSONTyped(json, false);
}

export function QuoteToJSONTyped(value?: Quote | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'symbol': value['symbol'],
        'price': value['price'],
    };
}


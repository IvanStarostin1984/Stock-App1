name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Create env files
        run: |
          echo "VITE_MARKETSTACK_KEY=${{ secrets.VITE_MARKETSTACK_KEY }}" > web-app/.env
          echo "VITE_NEWSDATA_KEY=${{ secrets.VITE_NEWSDATA_KEY }}" >> web-app/.env
          echo "LHCI_GITHUB_APP_TOKEN=${{ secrets.LHCI_GITHUB_APP_TOKEN }}" >> web-app/.env
          cp web-app/.env mobile-app/.env
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: web-app/package-lock.json
      - name: Install web dependencies
        run: npm ci
        working-directory: web-app
      - name: Build design tokens
        run: npm run tokens
        working-directory: web-app
      - name: Install package dependencies
        run: npm ci
        working-directory: packages
      - name: Check vitest config
        run: npm run lint:vitest-config
        working-directory: packages
      - name: Check package import paths
        run: npm run lint:paths
        working-directory: packages
      - name: Check NOTES order
        run: npm run lint:notes
        working-directory: packages
      - name: Run package tests with coverage
        run: |
          npm install --no-save -D @vitest/coverage-v8
          npx vitest run --coverage --coverage.provider=v8 \
            --coverage.thresholds.lines=75 \
            --coverage.thresholds.functions=75 \
            --coverage.thresholds.branches=75 \
            --coverage.thresholds.statements=75
        working-directory: packages
      - name: Run web tests with coverage
        run: |
          npx vitest run --coverage --coverage.provider=v8 \
            --coverage.thresholds.lines=75 \
            --coverage.thresholds.functions=75 \
            --coverage.thresholds.branches=75 \
            --coverage.thresholds.statements=75
          npx jest --coverage --coverageThreshold='{ "global": { "branches": 75, "functions": 75, "lines": 75, "statements": 75 } }'
        working-directory: web-app
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.22.x'
          channel: stable
      - name: Install Flutter dependencies
        run: flutter pub get
        working-directory: mobile-app
      - name: Run service package tests with coverage
        run: |
          flutter pub get
          flutter test --coverage --dart-define=VITE_NEWSDATA_KEY=test
        working-directory: mobile-app/packages/services
      - name: Run Flutter tests with coverage
        run: flutter test --coverage --dart-define=VITE_NEWSDATA_KEY=test
        working-directory: mobile-app
      - name: Build
        run: npm run build
        working-directory: web-app
      - name: Trigger Netlify build
        run: |
          if [ -n "$NETLIFY_HOOK_URL" ]; then
            curl -X POST "$NETLIFY_HOOK_URL"
          fi
        env:
          NETLIFY_HOOK_URL: ${{ secrets.NETLIFY_HOOK_URL }}
      - name: Run Lighthouse CI
        id: lighthouse
        run: npx lhci autorun
        working-directory: web-app
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
      - name: Upload Lighthouse artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: web-app/.lighthouseci
      - name: Upload web coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-web
          path: web-app/coverage
      - name: Upload Flutter coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-flutter
          path: |
            mobile-app/coverage
            mobile-app/packages/services/coverage
      - name: Upload package coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-packages
          path: packages/coverage

